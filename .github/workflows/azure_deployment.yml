name: Build and Deploy to Azure Container Apps

on:
  push:
    tags:
      - "*"

env:
  AZURE_REGION: centralindia
  RESOURCE_GROUP: HackerNews
  CONTAINER_APPS_ENVIRONMENT: HackerNewsContainerAppsEnvironment
  LOG_ANALYTICS_WORKSPACE: HackerNewsLogAnalyticsWorkspace
  ACR_REGISTRY: hackernews1si22is400.azurecr.io
  ACR_REPOSITORY_NAME: hackernews
  CONTAINER_APP_NAME: hackernews
  TARGET_PORT: 3000

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_GITHUB_ACTIONS }}

      - name: Check Resource Group exists
        run: |
          RG_EXISTS=$(az group show \
            --name "${{ env.RESOURCE_GROUP }}" \
            --query name \
            --output tsv 2>/dev/null || echo "")

          if [ -z "$RG_EXISTS" ]; then
            echo "❌ Resource group '${{ env.RESOURCE_GROUP }}' not found."
            echo "👉 Please create it manually first."
            exit 1
          fi

      - name: Ensure Azure Container Registry (ACR)
        run: |
          REGISTRY_NAME=$(echo "${{ env.ACR_REGISTRY }}" | cut -d'.' -f1)

          ACR_EXISTS=$(az acr show \
            --name "$REGISTRY_NAME" \
            --resource-group "${{ env.RESOURCE_GROUP }}" \
            --query name \
            --output tsv 2>/dev/null || echo "")

          if [ -z "$ACR_EXISTS" ]; then
            az acr create \
              --name "$REGISTRY_NAME" \
              --resource-group "${{ env.RESOURCE_GROUP }}" \
              --sku Standard \
              --admin-enabled true
          fi

          ACR_USERNAME=$(az acr credential show --name "$REGISTRY_NAME" --query username -o tsv)
          ACR_PASSWORD=$(az acr credential show --name "$REGISTRY_NAME" --query passwords[0].value -o tsv)

          echo "::add-mask::$ACR_USERNAME"
          echo "::add-mask::$ACR_PASSWORD"
          echo "ACR_USERNAME=$ACR_USERNAME" >> $GITHUB_ENV
          echo "ACR_PASSWORD=$ACR_PASSWORD" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.ACR_REGISTRY }}
          username: ${{ env.ACR_USERNAME }}
          password: ${{ env.ACR_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.ACR_REGISTRY }}/${{ env.ACR_REPOSITORY_NAME }}:${{ github.ref_name }}

      - name: Deploy to Azure Container Apps
        run: |
          az containerapp update \
            --name "${{ env.CONTAINER_APP_NAME }}" \
            --resource-group "${{ env.RESOURCE_GROUP }}" \
            --image "${{ env.ACR_REGISTRY }}/${{ env.ACR_REPOSITORY_NAME }}:${{ github.ref_name }}" \
            --environment "${{ env.CONTAINER_APPS_ENVIRONMENT }}" \
            --ingress external \
            --target-port "${{ env.TARGET_PORT }}" \
            --location "${{ env.AZURE_REGION }}" \
            --registry-server "${{ env.ACR_REGISTRY }}" \
            --registry-username "${{ env.ACR_USERNAME }}" \
            --registry-password "${{ env.ACR_PASSWORD }}" \
            --set-env-vars DATABASE_URL=${{ secrets.DATABASE_URL }} SECRET_KEY=${{ secrets.SECRET_KEY }}
